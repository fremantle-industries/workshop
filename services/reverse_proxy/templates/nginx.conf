worker_processes 2;

events {
    worker_connections  1024;
    multi_accept        on;
}

http {
    include         /etc/nginx/mime.types;
    default_type    application/octet-stream;

    sendfile    on;
    # internal fly.io DNS resolver [fdaa::3]
    # https://fly.io/docs/reference/private-networking/#discovering-apps-through-dns-on-an-instance
    resolver    ${REVERSE_PROXY_DNS_RESOLVER_ADDRESS};

    server {
        listen          ${REVERSE_PROXY_HTTP_PORT};
        listen          [::]:${REVERSE_PROXY_HTTP_PORT};
        server_name     ${REDPANDA_CONSOLE_EXTERNAL_HOST};

        location / {
            # nginx fails to start unless proxy_pass uses a variable & resolver
            # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
            set $upstream ${REDPANDA_CONSOLE_INTERNAL_HOST}:${REDPANDA_CONSOLE_HTTP_PORT};

            proxy_pass              http://$upstream;
            proxy_redirect          off;
            proxy_set_header        Host $host;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "Upgrade";
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Host $server_name;
        }
    }

    server {
        listen          ${REVERSE_PROXY_HTTP_PORT};
        listen          [::]:${REVERSE_PROXY_HTTP_PORT};
        server_name     ${WORKSHOP_UI_EXTERNAL_HOST};

        location / {
            # nginx fails to start unless proxy_pass uses a variable & resolver
            # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
            set $upstream ${WORKSHOP_UI_INTERNAL_HOST}:${WORKSHOP_UI_HTTP_PORT};

            proxy_pass              http://$upstream;
            proxy_redirect          off;
            proxy_set_header        Host $host;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "Upgrade";
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Host $server_name;
        }
    }

    server {
        listen          ${REVERSE_PROXY_HTTP_PORT};
        listen          [::]:${REVERSE_PROXY_HTTP_PORT};
        server_name     ${WORKSHOP_API_EXTERNAL_HOST};

        location / {
            # nginx fails to start unless proxy_pass uses a variable & resolver
            # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
            set $upstream ${WORKSHOP_API_INTERNAL_HOST}:${WORKSHOP_API_HTTP_PORT};

            proxy_pass              http://$upstream;
            proxy_redirect          off;
            proxy_set_header        Host $host;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection "Upgrade";
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Host $server_name;
        }
    }
}
